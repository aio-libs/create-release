---
name: create-release
description: GitHub action for publishing release on both PyPI and GitHub
inputs:
  changes_file:
    description: Path to CHANGES file generated by towncrier
    required: true
  name:
    description: The project name, empty if the name is skipped in CHANGES
    required: true
  github_token:
    description: GitHub token, e.g. secrets.GITHUB_TOKEN 
    required: true
  pypi_token:
    description: PyPI token used to upload packages
    required: true
  artifact:
    description: Artifact name to upload
    required: false
    default: ""
  dist_dir:
    description: Directory name for dists
    required: false
    default: dist
  version:
    description: Release version to extract
    required: false
    default: ''
  version_file:
    description: Path to file containing __version__ string
    required: false
    default: ''
  start_line:
    description: The marker for towncrier start point
    required: false
    default: '.. towncrier release notes start'
  head_line:
    description: Regular expression for head line
    required: false
    default: "{version}\\s+\\({date}\\)\n====+\n?"
  fix_issue_regex:
    description: Regexp for issue record replacement
    required: false
    default: ''
  fix_issue_repl:
    description: Replacement rule for regexps found by fix_issue_regex
    required: false
    default: ''
branding:
  color: yellow
  icon: package
runs:
  using: composite
  steps:
  - name: Prepare Release Note
    id: note
    uses: aio-libs/get-releasenote@master
    with:
      changes_file: ${{ inputs.changes_file }}
      output_file: release_note.md
      version: ${{ inputs.version }}
      version_file: ${{ inputs.version_file }}
      start_line: ${{ inputs.start_line }}
      head_line: ${{ inputs.head_line }}
      fix_issue_regex: ${{ inputs.fix_issue_regex }}
      fix_issue_repl: ${{ inputs.fix_issue_repl }}
  - name: Download dists
    if: ${{ inputs.artifact }}
    uses: actions/download-artifact@v2
    with:
      name: ${{ inputs.artifact }}
      path: ${{ inputs.dist_dir }}
  - name: PyPI upload
    if: ${{ inputs.pypi_token }}
    uses: pypa/gh-action-pypi-publish
    with:
      password: ${{ inputs.pypi_token }}
  - name: GitHub Release
    uses: ncipollo/release-action@v1
    with:
      name: "${{ inputs.name }} ${{ steps.note.outputs.version }}"
      artifacts: "${{ inputs.dist_dir }}/*"
      bodyFile: release_note.md
      prerelease: "${{ steps.note.outputs.prerelease }}"
      token: "${{ inputs.github_token }}
